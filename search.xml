<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OpenSOC原型图</title>
      <link href="/2019/09/23/OpenSOC%E5%8E%9F%E5%9E%8B%E5%9B%BE/"/>
      <url>/2019/09/23/OpenSOC%E5%8E%9F%E5%9E%8B%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>好久没更新了，最近在思考着如何来完成自己挖的坑！要完成这个OpenSOC，确实不容易，从原图设计，前端逻辑，到后端逻辑，架构选型等等，好多事情要做，难的不是业务本身，而是如何选好架构，如何将这些都完美地拼接到一起，这就要多花些时间来思考了！！！哎，毕竟不是做前端，主要精力是后端和数据平台实现，就凑合着看吧，主要是有了模型图，也就有了业务逻辑，要实现的功能，往后一点点实现，也就有了明确目标，怎么得，都得有始有终啊！</p><div align="center">    <img src="/2019/09/23/OpenSOC原型图/首页.png" alt="首页">    <img src="/2019/09/23/OpenSOC原型图/首页告警.png" alt="首页告警">    <img src="/2019/09/23/OpenSOC原型图/首页添加.png" alt="首页添加">    <img src="/2019/09/23/OpenSOC原型图/全屏.png" alt="全屏">    <img src="/2019/09/23/OpenSOC原型图/比较.png" alt="比较">    <img src="/2019/09/23/OpenSOC原型图/单项全屏.png" alt="单项全屏">    <img src="/2019/09/23/OpenSOC原型图/更新.png" alt="更新">    <img src="/2019/09/23/OpenSOC原型图/固件.png" alt="固件">    <img src="/2019/09/23/OpenSOC原型图/漏洞.png" alt="漏洞">    <img src="/2019/09/23/OpenSOC原型图/CPU信息.png" alt="CPU信息">    <img src="/2019/09/23/OpenSOC原型图/内存信息.png" alt="内存信息">    <img src="/2019/09/23/OpenSOC原型图/网络信息.png" alt="网络信息">    <img src="/2019/09/23/OpenSOC原型图/进程信息.png" alt="进程信息">    <img src="/2019/09/23/OpenSOC原型图/进程全屏.png" alt="进程全屏">    <img src="/2019/09/23/OpenSOC原型图/文件信息.png" alt="文件信息">    <img src="/2019/09/23/OpenSOC原型图/文件全屏.png" alt="文件全屏">    <img src="/2019/09/23/OpenSOC原型图/用户信息.png" alt="用户信息">    <img src="/2019/09/23/OpenSOC原型图/用户全屏.png" alt="用户全屏">    <img src="/2019/09/23/OpenSOC原型图/详细列表.png" alt="详细列表">    <img src="/2019/09/23/OpenSOC原型图/附页添加.png" alt="附页添加"></div>]]></content>
      
      
      <categories>
          
          <category> 安全运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原型图 </tag>
            
            <tag> MockPlus </tag>
            
            <tag> OpenSOC </tag>
            
            <tag> 运维安全 </tag>
            
            <tag> 安全运营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于SOC的详细思路</title>
      <link href="/2019/09/02/SOC%E6%80%9D%E8%B7%AF/"/>
      <url>/2019/09/02/SOC%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div align="center">    <img src="/2019/09/02/SOC思路/SOC.png" width="700" height="200" alt="SOC"></div><ul><li>系统名：变更名称报警，一般只有管理员才拥有修改主机名权限，此处名称作为设备的唯一标识，相对重要，也方便在发生故障，或安全事件时，能够快速定位故障点。此处就需要严格控制能够修改主机名权限的人员，另外，也可结合智能引擎识别恶意用户给出报警，减低误报率。</li><li>设备类型：分网络设备，安全设备，服务器等，如防火墙，WAF，IDS等，用于标识设备功能，在故障发生时，以防止忘记只有系统名标识该设备所具有的功能。</li><li>分组类型：网络组，安全组，服务组，业务组等</li><li>操作系统版本：无论网络设备，还是服务器等，都会有相应的支撑系统，这里列出操作系统的版本以显示相应版本是否存在高危漏洞，同时，期望给出相应版本的升级建议。操作系统的版本随意变更也希望给出警告，也需要严格控制系统补丁更新操作的权限。</li><li>固件版本：一般是硬件BIOS版本信息，这个信息容易忽略，也非常关键，也需要加入关键补丁修复建议，对于版本的变更也应给出告警。</li><li>IP地址：有些设备会有多个IP地址，应给出区分。IP地址也不应该随意变更，变更会报警。</li><li>系统运行时间：可以知道机器是否出现过宕机等故障</li><li>CPU类型：包括频率、物理核数和逻辑核数</li><li>CPU使用频率：能够按逻辑核数显示出其对应的频率，可以显示1min,5mins,15mins的情况，设置一阈值，比如达到80%使用报警，持续达到100%使用则持续报警</li><li>CPU物理故障：可能存在的物理故障，影响性能</li><li>内存大小与使用大小比例：实时获取信息，超过50%告警，超过80%高危报警，可以显示1min,5mins,15mins的情况</li><li>虚拟内存大小与使用大小比例：同上</li><li>物理内存故障：能够显示设备上内存大小，条数，存在故障的内存信息</li><li>网络端口状态信息：down or up</li><li>网络端口进出数据包信息：数据包统计，字节统计</li><li>进出口流量状态：各个端口流量状态图，可以显示1min,5mins,15mins的情况</li><li>按协议/IP地址/端口/地理位置统计信息：需要结合外部信息</li><li>网卡故障：显示网卡信息，能够显示故障网卡</li><li>磁盘大小与使用比例：超过80%报警，可以显示多个分区情况</li><li>磁盘故障：物理故障和逻辑故障</li><li>进程信息：默认显示TOP5高CPU、内存、网络使用进程，也可以完全显示。显示信息有CPU占用、内存占用、网络资源、端口、协议类型、CPU使用时间等</li><li>系统核心进程监控：可以自定义添加需要监控的进程信息，比如某些系统核心进程和服务进程，发生进程注入攻击时，或异常使用资源时都能够给出报警。</li><li>自定义需要监控的文件：比如文件访问，文件修改，文件权限变更，包括用户拥有者和读写执行权限</li><li>用户信息：用户创建、修改、删除信息</li><li>用户权限：权限变更，操作权限，系统权限，如资源使用，文件权限，登录权限等；</li><li>用户登录：用户登录成功，失败，只显示关键信息</li><li>补丁信息：是否存在高危漏洞，以及补丁修复情况</li></ul><p>以上功能可以分标签自定义设置要监控项目实现，并能够按照分组进行分类需要监控的项目，会给出默认监控项，可以勾选需要监控的项。</p><p>同时，对于以上有告警的监控项目，能够实现设置维护时间，按照人，时间，事件，做什么等设置维护，并记录这些维护事件。</p><p>以上信息如可以都分别存储到数据库，事件保留时间为180天为计算，实行回滚覆盖。</p><p>这是第一个大屏所要显示的实时信息，主要是运维为主的安全监控。</p><p>第二个大屏要展示的是各个设备上收集到的关键日志信息，比如防火墙上的过滤日志，IDS上的拦截日志，WAF上的过滤日志，操作系统上的执行日志等，这些日志，也是我们要提炼的，防火墙和IDS上的主要是以异常流量为主的过滤，以TCP/UDP协议为主，这里可以展示的统计信息有：</p><ol><li>TOP10的拦截IP，以及其地理位置，以及存在的设备名</li><li>TOP10的拦截域名，以及其地理位置，以及存在的设备名</li><li>TOP10的攻击类型，主要以WEB攻击为主，以及存在的设备名</li><li>TOP10的DDOS攻击类型，以及所影响的设备</li><li>TOP10程序执行的命令，恶意关联的，如数据库操作，系统越权等</li></ol><p>这边的最重要的职责是通过异常发现能够发现设备中存在的漏报和误报，这是一种事后反哺事先的辅助措施。</p><p>除去内网IP和VPN敏感操作留下的日志，我们需要通过用户行为收集各个运维操作者的行为特征，当出现异常对象，异常操作时，我们期望可以发现内鬼和外部攻击，因单纯地看外部攻击，很多只要通过基于规则和规则的设备监控可以拦截和发现，而这种情况是无法防御内鬼的。同时基于规则的过滤，都很容易被绕过，无论是防火墙，还是WAF等设备，我们可以使用聚类，聚类出异常流量，聚类特征可以通过观察，日志属于时间序列学习，要设定好时间分片，聚类出的异常流量，再来一波分析，对于标注信息，我们可以基于各个设备上的判断，比如对于IP，更多地是基于外部威胁情报，而域名检测，可以使用统计特征，HTTP(s)的流量检测可以基于攻击类型，程序执行日志，比如webshell，是基于程序文件来提特征等，无论哪种类型的检测，思路都是一样的，先检出异常流量，再细分攻击类型，确定为恶意后，我们可以跟设备检测的进行对比，再这里给出误报率和漏报率，以及哪些被漏报和误报，同时，能够反哺到设备进行人为修补。以此不断加强设备的防御能力。</p><p>第三个大屏期望可以显示的是实时攻击节点告警，和攻击链路显示，当被入侵时，能够实现显示攻击的链路，以及给出告警提醒监控人员，及时响应，每个节点都是以设备形式呈现，点击可以显示设备的详细信息，事中、事后的攻击链路梳理，能够实时呈现出哪个节点存在的防御不足，如何实现这个攻击的链路相对准确的显示呢，这个就是通过上面说到的要求设备和日志不断加强自身的检出能力，那么就可以通过比如IP地址在各个设备上的存在来绘制出攻击链路。</p><p>第四个大屏可以给出图关联，比如给出任意域名，IP或设备都能够，实现其信息的溯源关联，如域名注册信息，是否被用作僵尸网络等。</p>]]></content>
      
      
      <categories>
          
          <category> 安全运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维安全 </tag>
            
            <tag> 安全运营 </tag>
            
            <tag> 安全设备 </tag>
            
            <tag> 安全日志 </tag>
            
            <tag> 攻击链路 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于SOC的一点思考</title>
      <link href="/2019/08/30/SOC%E6%BC%AB%E8%B0%88/"/>
      <url>/2019/08/30/SOC%E6%BC%AB%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<p>安全设备发展到今天，已经是眼花缭乱，功能也是花里胡哨的，或许已经过了其自身本应该有的职责与价值。今天我就跟大家来聊聊这漫天乱飞的安全设备，到底这么多功能有啥用，是否需要这么多功能，以及为什么又会出现SOC，是不是都是顺应变化呢？</p><p>下面我就来一一简单介绍下，我所认为的应该存在的安全设备：</p><ol><li>抗D</li></ol><p>这我觉得应该是首当其冲的，随着云计算的兴起，也有了很多云抗D，无论是在云上，还是CDN端，这对于很多有价值的公司来说都是很有效的，但说实话，咱先不论各家的抗D能力，但其以能够抗多大的带宽来收费，这点，也着实让人感到后背发凉。</p><p>要知道对于抗D设备，它的主要功能就是流量压制，和清洗，要么就直接进黑洞，要么就是清洗出异常流量，对于一般的公司来说，抗D这块基本上也是花钱消灾，给CDN，云平台或托管商。</p><p>那对于这块我们能做什么，如果你有点钱，有自己的机房或托管机房，可以自己搞个抗D设备，那我们倒是可以收集这上面的日志，到SOC，用作后期的流量追踪。</p><ol start="2"><li>防火墙</li></ol><p>如果你没有抗D设备，那防火墙应该是你的第一道防线。我们防火墙的发展也是由来已久，从包过滤，到链路状态，再到现在的应用防火墙，似乎精准度也在不断提高，也得益于现在的设备性能。</p><p>防火墙最基本的功能就是针对五元组的规则过滤，而这块也是我们所要的，包括规则信息，和过滤日志。</p><ol start="3"><li>交换机/路由器</li></ol><p>交换机，顾名思义，也就是负责数据包转换，路由器呢，当然是负责指路的，我们可以记录下路由信息，和ACL信息，不过一般很少在路由器和交换机上设置，要设置也就是简单地几条。</p><ol start="4"><li>网络入侵检测</li></ol><p>俗称NIDS，它的同胞NIPS，不过现在也已经很少被提及了，也有很多都被集成到应用防火墙了，不过一般也不建议在防火墙上开启，性能消耗一般会很大。NIDS更多地是针对流量的检测，也是偏4层的TCP/UPD的过滤，不过，很多公司这个设备也会省略掉，会直接到WAF。</p><ol start="5"><li>WEB应用防火墙</li></ol><p>这就是上面提到的WAF，这层主要对象是针对WEB访问的，也就是说是针对HTTP/HTTPS流量的，其实为什么会需要WAF，也很直白，现在哪家公司没有个自己的网络，特别是电商平台，那是重中之重。这也是恶意用户最喜欢的入口，因为后台都是程序语言执行环境，可以与系统交互的，更多地现在针对各类攻击形式，也是基于正则的匹配。</p><ol start="6"><li>主机入侵检测</li></ol><p>它守护就接近于大本营了，如果到了这层，说明已经突破前面的防线了，回想着怎么获得权限，获取数据，持久控制了。那它更多地是更系统打交道，一般这块要么是收集信息，到主端，主端下放规则，匹配操作时间来监控和检测。</p><ol start="7"><li>堡垒机</li></ol><p>堡垒机其主要本身还是用来防内的，它也是内部操作服务端的唯一入口，可以记录用户的操作指令，并限制某些敏感指令的使用，其实也就是集中化监控下管理员，程序员，再随便加大入侵的难度。</p><ol start="8"><li>RASP</li></ol><p>实时应用自我保护，应该是这么翻译的，不过这块好像资料不多，其实，对于它来讲，如果要看程序执行的日志，最好是通过它收集。</p><ol start="9"><li>数据库防火墙</li></ol><p>它是否需要，不过很多公司都没用，感觉用处不大，不过对于有很多数据库要管的，那作为一个门户，或许用一下，也不错。</p><ol start="10"><li>内网行为管理</li></ol><p>其主要也是，防内，可以结合域控，防止数据泄露，监控员工上网行为等。</p><p>总结，以上必要存在的有：1，2，3，5，6，7，8，10。</p><p>我们可以看到，以上安全设备要么是以基于流量的检测与阻止，要么是基于行为的检测与拦截，更多地都是事先的能力为主，事后日志的追踪为辅。而说到这里，其实，不得不说的是正因为设备的繁多，功能的雍容，对于安全维护人员来说，我们如何才能看清一个安全事件，理清头绪呢？这就诞生了SOC的需求，当然SOC还有前身，什么SIME之类，具体什么区别，我也不细分，只是大概说说自己的看法。</p><p>如果说SOC是来集众设备于一身的，那它的主要职责就是方便安全人员的对安全事件的运营，能够对各个关联日志进行追踪梳理，便于面临安全事件能够快速做出响应和决断。这也是偏事中，和事后的过程。或许，它的出现也是为了做到安全的闭环，前面设备偏事前，SOC偏事后。SOC的难度就是对日志的收集，以及事件的关联，我们的最终目的是要能够形成安全事件的闭环的，并且以此来发现哪个环节出了问题，需要加以优化的。这也就是SOC的最大价值。</p><p>至于现在一直在谈机器学习的应用价值，其实它可以结合应用到各个环节中，主要看其场景适应性，机器学习是用来解决相似性问题的，而对于传统的基于规则的匹配，是越来越显得捉襟见肘了，彼时，才是它崭露头角的好时机。所以说，不要过于魔化机器学习，更不要过多听信什么AI安全宣传的噱头！</p><p>其实，我写这个，是感觉到现在的安全设备如此之多，功能越来越复杂，不要因为攻击事件的繁多，而使得设备”不堪重负”，我是觉得应该回归本真，做其该做的事情，简单为上，或许现在把机器学习引入，也是对其简化，赋能的好时候，我们的目标是以技术性手段来尽量遏制安全事件的发生，至少我觉得这是我们作为安全工程师的职责。</p><div align="center">    <img src="/2019/08/30/SOC漫谈/SOC.png" alt="SOC"></div>]]></content>
      
      
      <categories>
          
          <category> 安全运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全运营 </tag>
            
            <tag> 安全设备 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> SOC </tag>
            
            <tag> 智能安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebShell检测的相关特征</title>
      <link href="/2019/08/26/WebShell%E6%A3%80%E6%B5%8B/"/>
      <url>/2019/08/26/WebShell%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<div align="center">    <img src="/2019/08/26/WebShell检测/WebShell.jpg" width="700" height="200" alt="WebShell"></div><p>WebShell的检测本质上也就是恶意代码的检测</p><p>Webshell呈现出的相关特点：</p><p>（1）存在系统调用的命令执行函数，如eval、system、cmd_shell、assert等；</p><p>（2）存在系统调用的文件操作函数，如fopen、fwrite、readdir等；</p><p>（3）存在数据库操作函数，调用系统自身的存储过程来连接数据库操作；</p><p>（4）具备很深的自身隐藏性、可伪装性，可长期潜伏到web源码中；</p><p>（5）衍生变种多，可通过自定义加解密函数、利用xor、字符串反转、压缩、截断重组等方法来绕过检测；</p><p>（6）访问IP少，访问次数少，页面孤立，传统防火墙无法进行拦截，无系统操作日志；</p><p>（7）产生payload流量，在web日志中有记录产生。</p><p>WebShell检测技术：</p><ol><li>静态检测：匹配特征码，特征值，危险函数，采用的方法有哈希指纹，相似度比较等；</li><li>动态检测：执行过程中所呈现出的行为，如文件/数据库操作，网络访问等；</li><li>语法检测：分析程序语言本身存在的特性，如opcode，注释，变量，函数，字符串，程序语法结构（抽象语法树，结合NLP）等</li><li>统计检测：计算信息熵、最长单词、重合指数、压缩比，并结合机器学习方法建模进行检测。</li></ol><p>基于Web日志的统计特征：</p><ol><li>URI信息熵（主要是参数值部分）<ul><li>主要针对编码，加密数据，比如base64编码，呈现出的信息熵明显大于正常数据</li><li>会存在误报情况，有些URI中的参数值也会呈现出类似编码后的形式</li></ul></li><li>URI的访问频率<ul><li>Webshell页面一般是孤立页面，很少会被访问到，一般只是控制者访问</li><li>需排除也很少会被访问的，如后台管理，和测试维护页面</li></ul></li><li>请求头是否有referer字段<ul><li>正常页面一般都会有出入度访问的链接，入度为referer字段，出度为location字段，Webshell一般很少会有链接</li><li>但也要排除有些正常情况没有入度，如用户初次访问</li><li>因rederer字段可被修改，也存在被绕过</li></ul></li><li>统计请求中的key参数的频率<ul><li>正常web业务key参数都是固定的，而webshell发起请求时，可能会出现缺失参数</li></ul></li><li>统计请求中的key参数关联的页面<ul><li>正常页面key出现频率高，关联页面也多</li><li>登录页面，出现频率高，关联页面少</li><li>webshell则频率低，关联页面也少</li></ul></li><li>文件的重合指数IC<ul><li>加密文件的随机性变大，字符重合性指数变小，衡量文件是否加密，正常web页面文件很少会需要加密</li></ul></li><li>统计参数，参数值的长度<ul><li>比如说超过均值+3个标准差的，视为异常</li></ul></li><li>文件创建时间<ul><li>一般文件创建时间集中在部署日期，新产生的文件会存在可疑，不排除新增加</li></ul></li><li>文件的修改时间（最后一次被修改的时间）<ul><li>一般部署后不会变动，除某些配置文件</li></ul></li><li>文件访问时间<ul><li>一般恶意用户不会在正常时间访问，或发起恶意目的的请求</li></ul></li><li>文件权限<ul><li>文件权限的变动</li></ul></li><li>文件所有者<ul><li>异常用户</li></ul></li><li>文件中危险函数的比例<ul><li>文件操作，数据库，系统明亮执行，加解密编码类函数</li></ul></li><li>基于指纹，哈希比对<ul><li>对正常页面建立指纹库，定义阈值，计算相似值，检出异常</li><li>类似，可以计算余弦相似度，编辑距离等</li></ul></li></ol><ul><li>哈希指纹ssdeep：<a href="https://ssdeep-project.github.io/ssdeep/index.html" target="_blank" rel="noopener">https://ssdeep-project.github.io/ssdeep/index.html</a></li><li>规则匹配yara：<a href="https://yara.readthedocs.io/en/v3.8.1/" target="_blank" rel="noopener">https://yara.readthedocs.io/en/v3.8.1/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 恶意代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> WebShell </tag>
            
            <tag> 恶意代码 </tag>
            
            <tag> 特征提取 </tag>
            
            <tag> 统计方法 </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于人生的意义</title>
      <link href="/2019/08/21/%E5%85%B3%E4%BA%8E%E4%BA%BA%E7%94%9F%E7%9A%84%E6%84%8F%E4%B9%89/"/>
      <url>/2019/08/21/%E5%85%B3%E4%BA%8E%E4%BA%BA%E7%94%9F%E7%9A%84%E6%84%8F%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<div align="center">    <img src="/2019/08/21/关于人生的意义/人生的意义.jpg" width="700" height="200" alt="人生的意义"></div><p>人生的意义是什么？这似乎是个特别深奥的话题！让人不禁会想到哲学上的三大终极拷问“我是谁”，“我从哪里来”，“要到哪里去”，如果你仔细思考，这三大问题，其实是人类在对自我进行探索，以及与自然、宇宙的关系！也就是人类从诞生、生存和死亡的过程！</p><p>但，其实，我发现很多人，并不在乎这些，觉得是在浪费时间，讨论这些有什么用呢？！又不能产生什么实际的价值，你弄明白了，又能怎样？！对你现实的生活也没有多大帮助啊！是不是呢？！是，似乎是，对于他们的疑问，有时候，我也会想，仔细想想，好像似乎是没什么多大的作用！但反过来回头想想，你会觉得它产生的作用是极大的！这是你做人，做事的根基，是能够引导你在人生道路上一直朝着光明前进，而不会因为某些而堕入黑暗，这么说，我想，大家大概也明白！</p><p>那重要归重要，那对于这类的思考，还是希望能够尽早确定大体方向，而不要往后拖延，因为，越往后你越没有太多的时间来思考这些，而是应该早期既定框架，在以后的人生道路上根据具体的情形修正，优化这个方向… 其实，对于这些问题如果拖到后期，你会发现当你遇到很多关键的决策时，你可能会非常的迷茫，甚至会出现的情绪的波动，比如抑郁，甚至或其它过激行为，我这么说，有些人或许会有感觉！你有了明确而坚定的方向，人生在这个选定的方向上有了意义，而不会因为外界的诱惑而突破心理的底线等等，这些都是你思考后的沉淀，那是你的核心价值观，任何东西也无法改变它，它就是你的信仰！这就是它的巨大价值！</p><p>我不会大谈特谈，人生的意义是什么，各种哲学上的术语，搞得云里雾里，也不所云… 关键的道理，也是要结合我们实际生活，对我们所追求的美好、幸福产生直接价值的，这个过程也就需要一些看似虚的东西来护航，说到底其实，就是在跟人性中的恶做斗争！这也是人之所以区别于其它生物的伟大之处。</p><p>寻找人生的意义，因人而异，但又跳不出这个整体框架，我希望大家找到后，能够享受它带来的快乐与喜悦，这是与你内心相通的，不同于其它外界带来的刺激，相信我！</p><p>很多人不要看着得到物质的丰裕，但其实，内心并不快乐，精神极度匮乏，而精神的富足，就需要与自己对话，找到内心的核心需求，且不断叠加这种感觉，周而复始，循环这种效应，同时，它会对你整个人的风貌带来很大的改变，你期望的自信、气质等都会给到你！</p><p>好了，其实写这篇文章，主要还是看到知乎上问一些如何才能有气质，变得自信，很多人的回答都是通过外在来改变，而这些外在的改变相对来说最简单，也最不持久，说的不好听，就是一种伪装，那是真“虚”… 如果你还能享受这种“虚”，那我也就无话可说，人类往往都喜欢挑简单，便捷的事情来达成自己的目标，很显然，也明白这是自欺欺人，但还是要去做，这或许就是人类的矛盾吧！</p><p>（注：自勉！）</p>]]></content>
      
      
      <categories>
          
          <category> 人生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人生的意义 </tag>
            
            <tag> 生与死 </tag>
            
            <tag> 信仰 </tag>
            
            <tag> 价值 </tag>
            
            <tag> 自信 </tag>
            
            <tag> 气质 </tag>
            
            <tag> 底线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于工作</title>
      <link href="/2019/08/19/%E5%85%B3%E4%BA%8E%E5%B7%A5%E4%BD%9C/"/>
      <url>/2019/08/19/%E5%85%B3%E4%BA%8E%E5%B7%A5%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<div align="center">    <img src="/2019/08/19/关于工作/工作.png" width="600" height="200" alt="工作"></div><p>今天我们就来聊聊人生中第二重要的事情，那就是工作！前段时间又跟大家分享了自己对爱情的一点点看法！今天要聊的工作，那也是大部分人人生中都要面临的选择，他也是前面谈到的爱情的物质基础。这里，我且撇开某些可能一辈子不需要工作，也可以活的很潇洒，很快乐的，毕竟这部分人占少数，应该是绝少数！！！我们大多数人还是会为“资本家”服务，无论你是打工仔，还是创业者其实也都是属于这个范畴，只不过后者，是为国家工作而已！</p><p>谈到工作，我们就要面临对工作的选择，最好是选择对口，喜欢的工作，钱多活少，离家近，哈哈，开玩笑了，这样的工作，倒是可以来一打哈… 可现实呢，需要一分耕耘，一分收获，这本质上与农民耕种，工人建筑都是一个性质！所以说，我们也不要自以为是地认为自己会比农民，工人群体会产生更高的价值，我反而觉得，有时候我们的价值要远小于他们，他们才是这个国家的支撑基础！我想，我这么说，你们也应该明白！</p><p>说到选择，其实这真的很重要，对于工作，特别是第一份工作，那相对来说，会对你的未来决策产生相对大的影响！所以故而，坚决要慎重！其实，话虽如此，每年都有很多的大学生毕业，面临找工作的迷茫，当然心底都想找份喜欢、体面的工作，可往往事与愿违！我想，这里面也肯定有原因的，对吧，如果你真的很喜欢某个公司，某个岗位，我想，你拼了命，也会去争取的，对吧，这跟你很喜欢某个女孩子，应该是一样的吧！！！</p><p>也就是说，我们可以为自己喜欢的工作而做出正确的选择，而不是到时候面临没有选择，那说到这样，我想，大家也应该大致明白我的意思，那就是要早做准备！或许从孩提时代就应该开始了，或许大家会觉得这是不是太夸张了，其实，我觉得这一点也不夸张！孩提时代，不是要你直奔着未来20年后要找的公司和岗位，而是兴趣，对，兴趣，说了大家也都懂！感觉现在的父母好像也在这么做，其实呢，据我所知，是父母很少参与，而把孩子交给兴趣班，和老师，说我们已经这样做了，在培养孩子的“各种”兴趣，这样父母的心理也舒坦，大家都这么做了，so，我也这么做了，我们也不落后啊，我想，说到这里，大家又该明白了，这是什么呢？对，是父母的焦虑，社会的浮躁，教育的误导… 孩子从小的教育，更多地需要父母的引导，参与互动，父母去从中发现孩子存在的潜在兴趣，指导孩子朝着这个方向去走，并在路途中给予帮助与扶正，这个过程应该更多地是孩子自我兴趣驱动，父母提供参考，而不是父母来主导！其实这个话题，或许有点偏题，但确是对于未来工作中很重要的一环！</p><p>其实，说到工作，我想除了自身要考虑的因素外，还有个不得不提的那就是教育问题，中国的教育，其实，大家也心知肚明，这么多年，虽然有变化，但却没有本质的变化，应试教育的本质，花大量的时间为了考试而考试，至此，学校也是为了争得好的名誉而为之，鲜有真正考虑到重点的，那就是孩子真正能在学校里，老师身上学到什么，知识？为人？能力？还是我能做题！或许现在会好点吧！期望未来会更好吧！</p><p>说到兴趣，还有就是人生的意义，我觉得这个话题，可能作为父母们也不清楚，更不要说给孩子们去讲述了，这可能会产生对孩子一生的价值的影响，对于常说的价值观，人生观，世界观，爱情观等，这些每一个都很重要，这里，我不会具体去谈论这些，后续有时间，会一一与大家分享！</p><p>其实，说到这里，你有了兴趣，我想，你也有了持续努力的动力，当然咯，人毕竟是人，也会有懈怠之时，那这些我想，不会是很大的事情，前篇我们谈到了爱情，这里谈到了兴趣，这两者的结合，或许会产生更大的推动力的，也会在这个过程中催生出你所认同的人生的意义的，找到意义后，你所做的一切，也就有了意义，你的人生会少走很多弯路，少很多的痛苦的！</p><p>有人可能会说，你说的是不是有点理想化啊，其实不然，前面我也已经说到，找理想的工作，也是需要你努力的，即便你有很高的天赋，对吧，对于今天这个瞬息万变的时代，你也需要有先验知识，利用你的大脑，产生后验，对吧！</p><p>可能有些人，进入社会，会面临很多的困惑，虽然工作还不错，薪水也还可以，也都挺满意，但是就是觉得疲惫，没有持久的动力，人到中年，缺乏了新鲜感，没有了活力，分身乏术啊！或者还会去寻找意义！其实，这些都是前期应该完成的探索遗留到了后面所产生的，对于这些问题，是越早获知，越早受益！</p><p>一份喜欢的工作，和一份不喜欢的工作，却要为了家庭而牺牲，那确实会痛苦，如果是喜欢的工作，我想环境再恶劣，你也会去坚持，也会找到意义，和乐趣！这是人的韧性，也是你我的共知！这里我暂时不去讨论社会环境的影响，更准确地说是中国的社会环境，特别是当下的乌烟瘴气！后面有机会，也会与大家分享！</p><p>好了，说到这里也差不多了，我想表达的意思，如果说你对某个工作很喜欢，或者说某个事情很喜欢，无论打算以后就职，还是创业，我都希望能够尽早找到自己感兴趣的东西，并持续坚持下去，这里需要给你的原动力，就是要弄明白人与社会的关系，你未来所要尽的责任与义务！</p><p>（注：此文分享为主！）</p>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人生的意义 </tag>
            
            <tag> 工作 </tag>
            
            <tag> 兴趣 </tag>
            
            <tag> 教育 </tag>
            
            <tag> 人生观 </tag>
            
            <tag> 价值观 </tag>
            
            <tag> 世界观 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恶意域名的相关特征</title>
      <link href="/2019/08/19/%E6%81%B6%E6%84%8F%E5%9F%9F%E5%90%8D/"/>
      <url>/2019/08/19/%E6%81%B6%E6%84%8F%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<div align="center">    <img src="/2019/08/19/恶意域名/域名.jpeg" alt="DNS隧道"></div><p>DNS隧道，顾名思义，肯定是数据隐含在DNS数据包中进行传输，我们还有其它隧道，如HTTPS、HTTP proxy，tcp等，因为这些协议的端口一般企业防火前和入侵检测是不会限制的，这为如远程执行，僵尸网络提供了方便。那针对流量这部分，思路就是要先提取出这部分流量，然后在进行可能存在的恶意行为进行检测。其它隧道的检测也类似。<br>​<br>常见的建立DNS隧道的工具有：ioline、dnscat2、dns2tcp等。那相关的DNS的数据都会通过这个隧道进行传输，在建立完DNS隧道后，我们可以使用抓包工具如tcpdump专门抓取DNS 53协议的数据，这里面就可能存在其它隐含数据，而如果需要使用机器学习来进行辅助检测，那就得把流量数据考虑成文本，使用conv1d来进行基于文本的检测。流量文本可以使用tshark工具来进行转换。<br>​<br>恶意域名检测特征维度：</p><ul><li>alex排名</li><li>搜狗排名</li><li>搜索、百度收录数量</li><li>必应收录数量</li><li>网站首页完整度（一般恶意域名不会有web站点解析，据此可考虑该网址是否能够抓取到媒体资源来判断，或者使用head less浏览器去访问，如phantomjs）</li><li>是否是主流域名后缀，如.com，.net，.cn等都是正常域名</li><li>地理位置</li><li>A记录与CNAME，一般企业A记录和CNAME记录都会有，恶意域名可能只有A记录</li><li>其它特征：<ul><li>WHOIS匿名</li><li>域名更新频率</li><li>是否使用CDN，木马、webshell类域名不会使用CDN加速</li></ul></li></ul><p>黑客实施攻击会使用的恶意域名：</p><p>​木马回连、病毒通讯、反弹shell、SSRF、XSS、DDoS、挂马、矿机、DNS隧道木马等；其它恶意域名应用，如博彩、色情、垃圾邮件、毒品、军事、钓鱼等。<br>​<br>一般的用DNS隧道进行隐蔽数据传输会使用DNS中的TXT/MX/CNAME记录，用的比较多的就是TXT记录，针对这种情况，我们就可以想到其对应的检测分析：<br>​</p><ol><li>时间窗口内，TXT记录激增；</li><li>正常DNS查询，任何记录类型都会有，而恶意的行为，只有限制在A，AAAA，NS等，基于此，可以统计查询记录的数量；</li><li>DNS隧道中的数据都是经过编码的，其字符是不符合zipf定理的，也就是可能是平均分布的，另外还可以统计词频平均斜率；</li><li>统计请求/响应DNS的平均字符，最大，最小字符长度，一般是请求长，响应短；</li><li>根据数据包的五元组聚类，异常流量显著不同于正常流量；<ul><li>DNS的会话时长<ul><li>隧道木马一般使用的UPD套接字会很长，也会复用</li></ul></li><li>DNS会话中的数据包总数<ul><li>异常的数据包一般会较大</li></ul></li><li>上行大包栈请求报文的比例<ul><li>查询字节数大于50，可称为大包；</li><li>异常上传大包的情况较多；</li><li>强行拆分，会出现多个等同大小的数据包；</li><li>隧道木马中，DNS报文总数和DNS报文长度是负相关的</li></ul></li><li>下行小包栈响应报文比例<ul><li>正常的DNS响应较大；异常则简短，一般小于50</li></ul></li><li>有效载荷上传下载比<ul><li>交互通信时（请求过后），控制字段少，响应多，正常情况则相反；</li></ul></li><li>有效载荷部分是否加密<ul><li>加密，可疑</li></ul></li><li>域名对应的主机数量<ul><li>主机数量明显大于正常DNS通信；</li></ul></li><li>FQDN数异常检测<ul><li>一定时间窗口多于正常；</li></ul></li><li>总的查询报文载荷量<ul><li>明显大于正常水平</li></ul></li></ul></li><li>响应时间</li><li>计算查询和响应的信息熵，或平均信息熵</li><li>发包频率<ul><li>容易与DNS Flood流量混淆，方法是计算DNS会话包之前的均值/方差等特征，以区分开；</li></ul></li><li>以上基于DNS会话的特征，还可以从查询访问角度<ul><li>域名被访问频率<ul><li>很少访问；</li><li>新域名；</li><li>会有无响应的域名；</li></ul></li><li>TTL<ul><li>TTL较短</li></ul></li><li>时间窗口</li><li>域名变更频率</li></ul></li><li>域名本身<ul><li>域名随机字符串，词频特征</li><li>域名信息熵</li><li>字符分布（可读性/易读性）</li></ul></li><li>IP特征<ul><li>不同子网响应</li><li>源目的地址，位于不同国家，或区域，跨度大</li></ul></li><li>域名注册信息<ul><li>whois匿名等</li></ul></li></ol><p>数据建模，先基线过滤（比如连续7天出现未曾数据DNS查询流量），结合异常检测算法。</p><p>参考：</p><ul><li><a href="https://www.freebuf.com/articles/es/187451.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/es/187451.html</a></li><li><a href="https://www.cnblogs.com/LittleHann/p/8656621.html" target="_blank" rel="noopener">https://www.cnblogs.com/LittleHann/p/8656621.html</a><br>​</li></ul>]]></content>
      
      
      <categories>
          
          <category> 恶意域名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 特征抽取 </tag>
            
            <tag> 恶意域名 </tag>
            
            <tag> 异常检测 </tag>
            
            <tag> 统计分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于爱情</title>
      <link href="/2019/08/18/%E5%85%B3%E4%BA%8E%E7%88%B1%E6%83%85/"/>
      <url>/2019/08/18/%E5%85%B3%E4%BA%8E%E7%88%B1%E6%83%85/</url>
      
        <content type="html"><![CDATA[<div align="center">    <img src="/2019/08/18/关于爱情/LoveTree.jpg" alt="爱情树"></div><h4 id="什么是爱情？"><a href="#什么是爱情？" class="headerlink" title="什么是爱情？"></a>什么是爱情？</h4><p>什么是爱情呢？关于爱情，人们似乎又有很多想说的，但却又欲言欲止… 爱情不是魔法，但却让人无限神往！</p><p>那什么是爱情呢？或许爱情从亚当与夏娃初尝禁果时便产生了，又谁知道呢？！那这么说爱情便是产生于“性”了？！或许是吧，那又或许不是，如果说开始是，那后来慢慢就不是了…</p><p>那到底什么是爱情呢？其实，我们也并不需要什么明确的定义来框住“她”，因为她本来就是感性的，多变的… 常有听言，爱情是什么多巴胺、费洛蒙，或许那是生物学上对其“产中”给出的一点点解释，其实，爱情还真如魔法，放在特定的情景下，会有不同的感觉… 记得心理学家佛洛依德曾说过，人一生中最伟大的两件事：爱情与工作！至此，我相信爱情的伟大，或许能拯救人类也说不准呢!</p><p>我更相信，爱情，“她”是人类情感更高层次的演变与升华，源于其它情感，又高于其它情感…</p><h4 id="爱情的“骂名”？！"><a href="#爱情的“骂名”？！" class="headerlink" title="爱情的“骂名”？！"></a>爱情的“骂名”？！</h4><p>似乎爱情在奔跑、成长的过程中慢慢变了质，人们渐渐不再相信“她”，但又悄悄将其藏于内心深处，期待有机会再次遇见！</p><p>现实生活中的“爱情”被人性的“丑恶”给打到，那绝对是人类的悲哀！是人类赋予了“爱情”意义，但又狠狠地将其抛弃… “爱情”始终未变，变化的永远是人类自己，变质的是人的内心啊！</p><h4 id="美好的爱情啊！"><a href="#美好的爱情啊！" class="headerlink" title="美好的爱情啊！"></a>美好的爱情啊！</h4><p>爱情的伟大，源自于是人类对美好的一种向往，或者更激进点来说，是一种神往，所以，爱情，她是需要有人类美好品质作为铺垫的，不然是无法生长的！对爱情有美好期许的前提，是需要你有单纯、善良、无私等美好品质的，而恰巧这在现实生活中，却更容易失去，所谓，人在成长的过程中不断被“欲望”吞噬，一边遗忘，一边失去，美好的爱情也将离你而去！</p><p>无条件付出，或许是爱情最核心的力量，那是一种怀着满腔热血，面对刀山火海，依然愿意为之付出的精神！我们都容易被影视剧中的这种场景所感动，那其实就是我们内心深处最直白的期许，一种愿意用自己的“生命”为之付出的伟大存在感，那是自己生命在对方心里的一种神圣地位！至此，如能说窥探出“爱情”的些许本质，那就是爱情的美好表征，正映射出自己生命的伟大，被认同，被感知存在，这也是作为渺小人类，潜在的对生命，对自然的呐喊吧！</p><h4 id="中国式的“爱情”…"><a href="#中国式的“爱情”…" class="headerlink" title="中国式的“爱情”…"></a>中国式的“爱情”…</h4><p>在中国，似乎并不具备这种美好的土壤… 中国式的“爱情”，常常被绑架，那顶多是感情！中国，从古至今，基本上一直延续的是”媒约制“，有无伟大爱情孕育过，或许有，常有人说，中国有什么四大爱情经典，那或许只是古人的”意淫”！拿到现在，很多固有的约束依然存在，渐渐要在年轻人中看到些许微弱的“绿光”，也快被掐灭…</p><p>至此，大多数中国人只能怀着“美好的期许”步入婚姻，中国式的婚姻又是一团乱麻，婚前没达到的心理期许，婚后，很可能会成为一颗炸弹…</p><h4 id="总结…"><a href="#总结…" class="headerlink" title="总结…"></a>总结…</h4><p>很多人，总会为“先有鸡先有蛋”的问题烦恼，对于爱情，你若相信，她便会给你无穷力量！</p><p>有人说，爱情会慢慢趋于平淡，退化为其它情感，或许是，或许又不是，当你在某种场景下时，那时候涌现出的还是爱情！</p><p>同样，爱情也是需要“运营”的，以此来形成一种长久的羁绊，前提是你选择了”她”，并且拥有一颗虔诚的心，那是你对爱情的信仰！</p><p>（注：此文写给自己，亦是写给相信爱情的人，仅表个人！）</p>]]></content>
      
      
      <categories>
          
          <category> 爱情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信仰 </tag>
            
            <tag> 爱情 </tag>
            
            <tag> 生命 </tag>
            
            <tag> 善良 </tag>
            
            <tag> 单纯 </tag>
            
            <tag> 无私 </tag>
            
            <tag> 存在感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于安卓APK的一点知识</title>
      <link href="/2019/08/16/%E5%AE%89%E5%8D%93APK/"/>
      <url>/2019/08/16/%E5%AE%89%E5%8D%93APK/</url>
      
        <content type="html"><![CDATA[<p><strong>一个APK文件通常包含以下文件：</strong></p><ul><li>class.dex: Dalvik字节码，可被Dalvik虚拟机执行。</li><li>AndroidManifest.xml: 一个Android清单文件，用户描述该应用程序的名称、版本号、所需权限、注册服务、链接到的其它应用程序。该文件使用XML文件格式。</li><li>META-INF文件夹：下面有3个文件<ul><li>MANIFEST.MF：清单信息</li><li>CERT.RSA：保存应用程序的证书和授权信息</li><li>CERT.SF：保存SHA-1信息资源列表</li></ul></li><li>res：APK所需要的资源文件夹</li><li>assets：不需编译的原始资源文件目录</li><li>resources.arsc：编译后的二进制资源文件</li><li>lib：库文件目录</li></ul><p><strong>Dalvik虚拟机与反编译：</strong></p><p>区别于JAVA虚拟机（JVM），安卓虚拟机称为Dalvik虚拟机（DVM）。Java虚拟机运行的是Java字节码，Dalvik虚拟机运行的是Dalvik字节码。Java虚拟机基于栈架构，Dalvik虚拟机基于寄存器架构。</p><p>DVM拥有专属的DEX可执行文件格式和指令集代码。smali和baksmali则是针对DEX执行文件格式的汇编器和反汇编器，反汇编后DEX文件会产生.smali后缀的代码文件，smali代码拥有特定的格式与语法，smali语言是对Dalvik虚拟机字节码的一种解释。</p><p><a href="https://ibotpeaches.github.io/Apktool/" target="_blank" rel="noopener">apktool</a>工具是在smali工具的基础上进行封装和改进的，除了对DEX文件的汇编与反汇编功能外，还可以对APK中已编译成二进制的资源文件进行反编译和重新编译。如下是使用apktool工具来反汇编APK文件得到其对应文件信息（默认是输出到同名当前目录，可以使用-o参数输出到执行目录）：</p><pre><code>apktool d /Users/johnnie/Downloads/xxx.apk</code></pre><ul><li>AndroidManifest.xml 配置文件</li><li>apktool.yml 反编译生成的文件，供apktool使用</li><li>assets/ 不需反编译的资源文件目录</li><li>lib/ 不需反编译的库文件目录</li><li>res/ 反编译后的资源文件目录</li><li>smali/ 反编译生成的smali 源码文件目录</li></ul><p>其中，smali目录结构对应着原始的java源码src目录。（也是Dalvik字节码提取的关键位置，类似于Windows的EXE的opcode，可见都有其共通性！）</p><p><strong>Dalvik指令的分类与描述</strong></p><p>smali是对DVM字节码的一种解释，虽然不是官方标准语言，但所有语句都遵循一套语法规范。Dalvik opcodes的详细说明可以参考<a href="http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html" target="_blank" rel="noopener">这篇文章</a>，里面详细列举了Dalvik Opcode的含义及用法、例子。</p><p>由于Dalvik指令有两百多条，对需要的进行了分类和精简，去掉了无关的指令，只留下了M、R、G、I、T、P、V七大类核心的指令集合，并且只保留操作码字段，去掉了参数。M、R、G、I、T、P、V七大类指令集合分别代表了移动、返回、跳转、判断、取数据、存数据、调用方法七种类型的指令。如下分类与描述：</p><div align="center">    <img src="/2019/08/16/安卓APK/Andorid Opcodes.png" alt="Andorid Opcodes"></div>]]></content>
      
      
      <categories>
          
          <category> 恶意软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> DVM </tag>
            
            <tag> apktool </tag>
            
            <tag> smali </tag>
            
            <tag> opcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恶意软件的特征提取</title>
      <link href="/2019/08/15/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/"/>
      <url>/2019/08/15/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<div align="center">    <img src="/2019/08/15/恶意软件/恶意软件.png" width="700" height="200" alt="恶意软件"></div><p><strong>特征提取：</strong></p><ol><li>提取恶意软件进程行为调用系统APIs产生的序列；（恶意程序需在沙箱中执行，比如<a href="https://cuckoosandbox.org/" target="_blank" rel="noopener">Cuckoo</a>和<a href="https://www.virustotal.com" target="_blank" rel="noopener">Virustotal</a>，获取每个程序执行的日志）</li><li>因恶意程序对系统APIs的调用会被操控，可用恶意程序开始执行的头10秒产生的连续数据替代，如系统CPU使用，用户CPU使用，数据包发送，数据包接收，字节发送，字节接收，内存使用，缓存使用，当前运行进程总数，最大进程号等；</li><li>每个恶意程序PE文件里的APIs调用，可以使用<a href="https://www.pydoc.io/pypi/pefilenew-2.2/index.html" target="_blank" rel="noopener">pefile</a>，<a href="https://lief.quarkslab.com/" target="_blank" rel="noopener">LIEF</a>等工具提取，不仅包括APIs；</li><li>系统调用APIs名称为节点，入度为其节点权重，出度为其各连接节点的边权重，构建有向带权图，图的邻接矩阵可作为输入；</li><li>动静态特征：① 请求权限；② 敏感APIs；③ 动态行为；</li><li>抽取恶意软件的opcode，再使用n-gram提取100-300组特征；或是将抽取的opcode组成图，以图关系的邻接矩阵的奇异值分解的头2维度作为输入。</li></ol><p>参考：<a href="https://arxiv.org/pdf/1807.04739.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1807.04739.pdf</a></p>]]></content>
      
      
      <categories>
          
          <category> 恶意软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 特征抽取 </tag>
            
            <tag> 网络安全 </tag>
            
            <tag> 恶意软件 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
